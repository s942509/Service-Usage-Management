# -*- coding: utf-8 -*-
"""Service-Usage-Management.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1g4x_9pk7MMlKDu3bNqUQ2lvVh0Pc8Yps

#Service-Usage-Management
"""

customers = [
    ["USER1", 437, "Google", "Google Chrome", 1, 0],
    ["USER2", 3789, "Microsoft", "Microsoft Edge", 1, 0],
    ["USER3", 4378, "Google", "Google Chrome", 2, -1],
    ["USER4", 1289, "Microsoft", "Microsoft Edge", 2, 352],
    ["USER5", 849, "Microsoft", "Microsoft Edge", 2, 4921],
    ["USER6", 732, "Google", "Mozilla Firefox", 2, -1],
    ["USER7", 3789, "Google", "Microsoft Edge", 2, 32],
    ["USER8", 4378, "Microsoft", "Google Chrome", 2, 10],
    ["USER9", 472, "Microsoft", "Mozilla Firefox", 2, 60],
    ["USER10", 5261, "Microsoft", "Google Chrome", 1, 421]
]

# Time Formatting Function
def format_time(time):
    hours = time // 3600
    minutes = (time % 3600) // 60
    remaining_time = time % 60
    return f"{hours} hrs, {minutes} min., {remaining_time} sec."

# Fee Calculation Function
def calculate_total(time):
    if time < 1800:
        total = 1000
    else:
        total = 1000 + ((time - 1800) // 600) * 300
    return total

# Buffering Time Calculation
def calculate_buffering_time(error_num):
    count = 0
    while error_num >= 1:
        error_num //= 2
        count += 1
    return count * 5  # 5x Output

# Availability Check Function
def check_availability(customer):
    user_name, _, account, browser, _, _ = customer

    if account == "Google":
        if browser == "Google Chrome":
            return "Available"
        else:
            print(f"{user_name}: Please use Google Chrome as browser")
            return "Not Available"

    elif account == "Microsoft":
        if browser in ["Google Chrome", "Mozilla Firefox"]:
            print(f"{user_name}: Please get the plugin for Skype.")
            return "Not Available"
        elif browser == "Microsoft Edge":
            return "Available"
        else:
            print(f"{user_name}: Please use Microsoft Edge as browser")
            return "Not Available"

    else:
        print(f"{user_name}: Please use Google or Microsoft as account")
        return "Not Available"

# Main Function: Process All Users
def process_customers(customers):
    for customer in customers:
        name, time, account, browser, question_num, error_num = customer

        if check_availability(customer) == "Available":

            if question_num == 1:
                formatted_time = format_time(time)
                total_yen = calculate_total(time)
                print(f"{name}: {formatted_time} Total is {total_yen} yen.")

            elif question_num == 2:
                if error_num == -1:
                    print(f"{name}: Contract overdue")
                elif error_num > 1:
                    buffering_time = calculate_buffering_time(error_num)
                    print(f"{name}: Buffering time last {buffering_time} min.")

# Execute Main Function
process_customers(customers)